apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-web
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-web # has to match .spec.template.metadata.labels
  serviceName: {{ .Release.Name }}-web
  replicas: 1 # by default is 1
  minReadySeconds: 10 # by default is 0
  volumeClaimTemplates:
    - metadata:
        name: uploads
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-web # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      {{ include "initCheckContainers" . | nindent 6 }}
      containers:
        - name: server
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if eq .Values.mode "development" }}
          args: ["npm", "run", "dev:server"]
          {{- else }}
          args: ["./app", "start", "server"]
          {{- end }}
          ports:
            - containerPort: 8000
              name: web
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config
            - secretRef:
                name: {{ .Release.Name }}
          volumeMounts:
            - name: uploads
              mountPath: "/uploads"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-redis
                  key: redis-password
                  optional: false